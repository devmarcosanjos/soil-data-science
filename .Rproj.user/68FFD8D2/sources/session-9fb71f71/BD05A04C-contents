# Fazer um filtro das amostras da base de treinamento para a cidade de RONDÔNIA 


# Carregar pacotes
if (!requireNamespace("data.table", quietly = TRUE)) install.packages("data.table")
if (!requireNamespace("sf", quietly = TRUE)) install.packages("sf")
if (!requireNamespace("geobr", quietly = TRUE)) install.packages("geobr")
if (!requireNamespace("gstat", quietly = TRUE)) install.packages("gstat")
if (!requireNamespace("RColorBrewer", quietly = TRUE)) install.packages("RColorBrewer")

library(data.table)
library(sf)
library(geobr)

# Carregar dados
oob_results <- fread("./data/soil-organic-carbon-stock-0-30-cm-grams-per-square-meter.csv")

# Remover duplicatas com base em latitude e longitude
oob_results <- unique(oob_results, by = c("latitude", "longitude"))

# Carregar shapefiles de estados e municípios
states <- geobr::read_state(year = 2018) |> st_transform(crs = 4326)
cities <- geobr::read_municipality(year = 2018) |> st_transform(crs = 4326)

# Converter para sf
oob_results_sf <- st_as_sf(oob_results, coords = c("longitude", "latitude"), crs = 4326)

# Juntar estados e municípios sem excluir pontos
oob_results_sf <- st_join(oob_results_sf, states, left = TRUE)
oob_results_sf <- st_join(oob_results_sf, cities, left = TRUE)

# Filtrar apenas Rondônia
oob_results_RO <- oob_results_sf[oob_results_sf$name_state == "Rondônia", ]

# Adicionar coordenadas de volta
coords <- st_coordinates(oob_results_RO)
oob_results_RO$latitude <- coords[, "Y"]
oob_results_RO$longitude <- coords[, "X"]

# Total de dados
cat("Número de amostras em Rondônia:", nrow(oob_results_RO), "\n")

# Verificar duplicatas
duplicados <- oob_results_RO[duplicated(oob_results_RO[, c("latitude", "longitude")]), ]

# Exibir número de duplicatas
cat("Número de amostras duplicadas:", nrow(duplicados), "\n")

# Salvar dados em CSV
write.csv(oob_results_RO, "./data/oob-results-RO-v2.csv", row.names = FALSE)

# total de dados 
nrow(oob_results_RO)
